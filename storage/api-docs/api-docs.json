{
    "openapi": "3.0.0",
    "info": {
        "title": "Blog",
        "description": "Blog Swagger",
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user with the provided name, email, and password.",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Ivan Maulana"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ivan@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "ivanmaulana123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "ivanmaulana123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "access_token_here"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Ivan Maulana"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "ivan@gmail.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Logs in a user with the provided email and password.",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "ivan@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "ivanmaulana123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is logged in successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "access_token_here"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Ivan Maulana"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "ivan@gmail.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout and revoke the access token",
                "operationId": "5ff2dc8b48bff52908d3821a0ecc9b3e",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is logged out successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/blog": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Get all blog posts",
                "description": "Retrieves all blog posts.",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Blog posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Blog posts are retrieved successfully or No blog posts found!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Blog Post Title"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "Blog Post Content"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-03-09T12:34:56Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-03-09T12:34:56Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Create a new blog post",
                "description": "Creates a new blog post with the provided title and content.",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New Blog Post"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is the content of the blog post."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog post added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Blog post is added successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "New Blog Post"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "This is the content of the blog post."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-09T12:34:56Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-09T12:34:56Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/blog/{id}": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Get a specific blog post",
                "description": "Retrieves a specific blog post by its ID.",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog post",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post retrieval response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Blog Post Title"
                                                        },
                                                        "content": {
                                                            "type": "string",
                                                            "example": "Blog Post Content"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-03-09T12:34:56Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-03-09T12:34:56Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "properties": {
                                                        "status": {
                                                            "type": "string",
                                                            "example": "failed"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Blog post is not found!"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Update a specific blog post",
                "description": "Updates a specific blog post by its ID.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog post",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Blog Post"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is the updated content of the blog post."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog post update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Updated Blog Post"
                                                        },
                                                        "content": {
                                                            "type": "string",
                                                            "example": "This is the updated content of the blog post."
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "properties": {
                                                        "status": {
                                                            "type": "string",
                                                            "example": "failed"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Blog post is not found!"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error!"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Delete a specific blog post",
                "description": "Deletes a specific blog post by its ID.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog post",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post deletion response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Deleted Blog Post"
                                                        },
                                                        "content": {
                                                            "type": "string",
                                                            "example": "This is the content of the deleted blog post."
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "properties": {
                                                        "status": {
                                                            "type": "string",
                                                            "example": "failed"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "Blog post is not found!"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/blog/search/{title}": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Search for blog posts by title",
                "description": "Retrieves blog posts based on the provided title search.",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "Title to search for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog posts retrieval response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Array of blog posts",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Blog Post Title"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "Blog Post Content"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "no_posts_found": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Blogs",
            "description": "Endpoints for managing blog posts"
        }
    ]
}